{"meta":{"title":"QwerSe","subtitle":"一个方向，来回走动","description":"QwerSe-一击致命，一点就透\n","author":{"name":"qwerse","email":"qwerse@139.com","github":"No","weibo":"No","avatar":null},"url":"https://www.qwerse.com"},"pages":[{"title":"","date":"2018-08-02T10:39:56.420Z","updated":"2018-08-02T10:39:56.420Z","comments":true,"path":"welcome.html","permalink":"https://www.qwerse.com/welcome.html","excerpt":"","text":"一. 简介GitBlog是一个简单易用的Markdown博客系统，它不需要数据库，没有管理后台功能，更新博客只需要添加你写好的Markdown文件即可。它摆脱了在线编辑器排版困难，无法实时预览的缺点，一切都交给Markdown来完成，一篇博客就是一个Markdown文件。同时也支持评论，代码高亮，数学公式，页面PV统计等常用功能。GitBlog提供了不同的主题样式，你可以根据自己的喜好配置，如果你想自己制作博客主题，也是非常容易的。GitBlog还支持整站静态导出，你完全可以导出整站静态网页部署到Github Pages。 二. 功能特点 使用Markdown 评论框 代码高亮 PV统计 Latex数学公式 自制主题 响应式 全站静态导出 良好的SEO 三. GitBlog优势 无需数据库，系统更轻量，移植更方便 使用Markdown编写，摆脱后台编辑排版困难，无法实时预览的缺点 可全站静态导出 配置灵活，可自由开关某些功能 多主题支持，可自制主题 博客，分类，标签，归档 四. 环境要求PHP 5.2.4+ 五. 安装步骤 下载GitBlog源代码 解压上传到你的PHP网站根目录 打开浏览器，访问网站首页 上传Markdown文件到posts文件夹 六. 详细说明1. 安装2. 目录结构3. 配置说明4. 编写博客5. 评论，订阅，统计等6. 缓存机制7. 全站静态导出8. 主题制作9. 在Nginx上运行GitBlog10. 在Apache上运行GitBlog11. 在SAE上运行GitBlog12. 使用GitBlog和Github Pages搭建博客13. Gitblog升级14. 从wordpress导入 七. 问题及bug反馈如果在实际使用过程中对GitBlog有新的功能需求，或者在使用GitBlog的过程中发现了Bug，欢迎反馈给我。可以直接在Github上提交，也可以发邮件至164068300[AT]qq.com与我取得联系，我将及时回复。如果你自己制作了漂亮好用的主题，也非常欢迎你提交给我，我会在这里展示你的主题链接。如果你正在使用GitBlog，也可以告诉我，我将也会在这里列出使用者名单。如果你想和其他GitBlog使用者讨论交流，欢迎加入QQ群84692078。 八. 使用者列表 Weeds 橙子 jockchou GitBlog Doc zxy 九. 感谢GitBlog的成长需要喜欢Markdown，喜欢写博客的各位亲们支持！感谢你们使用GitBlog，感激你们对Gitblog的良好建议与Bug反馈。 QQ群：84692078作者邮箱：164068300[AT]qq.com"}],"posts":[{"title":"2018-7月照片","slug":"blog/life/生活照片","date":"2018-08-01T16:00:00.000Z","updated":"2018-08-02T11:37:40.640Z","comments":true,"path":"2018/08/02/blog/life/生活照片/","link":"","permalink":"https://www.qwerse.com/2018/08/02/blog/life/生活照片/","excerpt":"","text":"","categories":[{"name":"life","slug":"life","permalink":"https://www.qwerse.com/categories/life/"}],"tags":[{"name":"照片","slug":"照片","permalink":"https://www.qwerse.com/tags/照片/"}],"keywords":[{"name":"life","slug":"life","permalink":"https://www.qwerse.com/categories/life/"}]},{"title":"出现PAGE_FAULT_IN_NONPAGED_AREA错误","slug":"blog/windows/电脑蓝屏_PAGE_FAULT_IN_NONPAGED_AREA","date":"2018-07-19T16:00:00.000Z","updated":"2018-08-01T08:15:31.676Z","comments":true,"path":"2018/07/20/blog/windows/电脑蓝屏_PAGE_FAULT_IN_NONPAGED_AREA/","link":"","permalink":"https://www.qwerse.com/2018/07/20/blog/windows/电脑蓝屏_PAGE_FAULT_IN_NONPAGED_AREA/","excerpt":"","text":"连续4台电脑出现这个问题往上面找了，说是内存的原因，感觉不对。 怎么感觉都是系统的原因，同事老王说是windows打补丁的结果，-_-||。 最后还是老王 在pe下使用chkdsk c: /f /r 进行了修复，重启果然就好了。。 ！！！注意c是系统盘","categories":[{"name":"windows","slug":"windows","permalink":"https://www.qwerse.com/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.qwerse.com/tags/windows/"}],"keywords":[{"name":"windows","slug":"windows","permalink":"https://www.qwerse.com/categories/windows/"}]},{"title":"cobbler配置的安装和坑","slug":"blog/linux/cobbler閰嶇疆鍙婂潙","date":"2018-07-05T16:00:00.000Z","updated":"2018-08-01T08:20:49.787Z","comments":true,"path":"2018/07/06/blog/linux/cobbler閰嶇疆鍙婂潙/","link":"","permalink":"https://www.qwerse.com/2018/07/06/blog/linux/cobbler閰嶇疆鍙婂潙/","excerpt":"","text":"先说一下坑 url –url=”http://127.0.0.1/cobbler/ks_mirror/Centos-7.4mini-x86_64/&quot; ks文件里一定要指定url --url,127.0.0.1一定要替换局域网里面的ip 能进安装界面，但是卡死不动，是ks文件没有配置好。怎么获取好的配置文件呢？最简单的方式就是用光盘安装一遍。进入root主目录有个ana开头的文件，把里面的内容复制下来就行了。我一般喜欢用图形安装方式，比较不容易出现问题。 安装配置步骤网上教程太多，重复的造轮子也没有什么意义 选择一篇我自己实践过的文章，写的非常的好。 文章（点击下载） 附一下我的ks文件，是centos7的图形安装123456789101112131415161718192021222324252627282930313233343536373839404142434445464748#version=DEVEL# System authorization informationauth --enableshadow --passalgo=sha512# Use CDROM installation mediainstall# Use graphical installgraphical# Run the Setup Agent on first bootfirstboot --enableignoredisk --only-use=sda# Keyboard layoutskeyboard --vckeymap=us --xlayouts=&apos;us&apos;# System languagelang en_US.UTF-8# Network informationnetwork --bootproto=dhcp --device=eth0 --onboot=off --ipv6=auto --no-activatenetwork --hostname=localhost.localdomain# Root passwordrootpw --iscrypted $6$KISrAVI4.I92wl5M$Q4vAA3tqkoXOq0otYYUBEwtHdb1SB9YttiEBzOkcHhALakx/1sUoh1y83bSB2zUFvtTd6Zgb9Xq4lxhJ.hE.y/# System servicesservices --enabled=&quot;chronyd&quot;# System timezonetimezone America/New_York --isUtc# System bootloader configurationbootloader --append=&quot; crashkernel=auto&quot; --location=mbr --boot-drive=sdaautopart --type=lvm# Partition clearing informationclearpart --none --initlabel%packages@minimal@corechronykexec-tools%end%addon com_redhat_kdump --enable --reserve-mb=&apos;auto&apos;%end%anacondapwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notemptypwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyokpwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty%end","categories":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}],"tags":[{"name":"cobbler","slug":"cobbler","permalink":"https://www.qwerse.com/tags/cobbler/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}]},{"title":"5月小结","slug":"blog/life/5月小结","date":"2018-05-29T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2018/05/30/blog/life/5月小结/","link":"","permalink":"https://www.qwerse.com/2018/05/30/blog/life/5月小结/","excerpt":"","text":"五月前半时间还是挺热的，后半月气温就还好。五月前1/3，还在好好的自学，中间10天就比较浮躁了，因为要去市场实习。说实话我是非常反感市场实习的，因为我感觉好的能力有所欠缺，特别是在沟通方面。去了20-25共6天，期间市场体验非常的糟糕，失败的程度非常大。一度很沮丧。期间收获了友谊和个人的成长，越是害怕的事，如果能克服的话，也是非常nb的。 放一张我们泰州小组的照片，这次出差每个人都非常不容易。","categories":[{"name":"life","slug":"life","permalink":"https://www.qwerse.com/categories/life/"}],"tags":[{"name":"life","slug":"life","permalink":"https://www.qwerse.com/tags/life/"}],"keywords":[{"name":"life","slug":"life","permalink":"https://www.qwerse.com/categories/life/"}]},{"title":"numpy函数split的用法","slug":"blog/python/numpy鍑芥暟split鐨勭敤娉昣","date":"2018-04-26T16:00:00.000Z","updated":"2018-08-01T08:22:05.406Z","comments":true,"path":"2018/04/27/blog/python/numpy鍑芥暟split鐨勭敤娉昣/","link":"","permalink":"https://www.qwerse.com/2018/04/27/blog/python/numpy鍑芥暟split鐨勭敤娉昣/","excerpt":"","text":"12import numpy as npimport pandas as pd 建立一个2维数组12a = np.arange(1,101).reshape((10,10))a array([[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [ 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [ 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [ 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], [ 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], [ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], [ 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]]) split 的普通用法1np.split(a,10) #把a这个ndarray,放在第一位，把要分割的次数放在第二位.!第二位数字一定是能被元素和整除。 [array([[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]), array([[11, 12, 13, 14, 15, 16, 17, 18, 19, 20]]), array([[21, 22, 23, 24, 25, 26, 27, 28, 29, 30]]), array([[31, 32, 33, 34, 35, 36, 37, 38, 39, 40]]), array([[41, 42, 43, 44, 45, 46, 47, 48, 49, 50]]), array([[51, 52, 53, 54, 55, 56, 57, 58, 59, 60]]), array([[61, 62, 63, 64, 65, 66, 67, 68, 69, 70]]), array([[71, 72, 73, 74, 75, 76, 77, 78, 79, 80]]), array([[81, 82, 83, 84, 85, 86, 87, 88, 89, 90]]), array([[ 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]])] 犀利一点的语法1np.split(a,2,axis=1) #axis为0按行分割，为1按列分割 [array([[ 1, 2, 3, 4, 5], [11, 12, 13, 14, 15], [21, 22, 23, 24, 25], [31, 32, 33, 34, 35], [41, 42, 43, 44, 45], [51, 52, 53, 54, 55], [61, 62, 63, 64, 65], [71, 72, 73, 74, 75], [81, 82, 83, 84, 85], [91, 92, 93, 94, 95]]), array([[ 6, 7, 8, 9, 10], [ 16, 17, 18, 19, 20], [ 26, 27, 28, 29, 30], [ 36, 37, 38, 39, 40], [ 46, 47, 48, 49, 50], [ 56, 57, 58, 59, 60], [ 66, 67, 68, 69, 70], [ 76, 77, 78, 79, 80], [ 86, 87, 88, 89, 90], [ 96, 97, 98, 99, 100]])] 1np.split(a,2,axis=0) [array([[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [41, 42, 43, 44, 45, 46, 47, 48, 49, 50]]), array([[ 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], [ 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], [ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], [ 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]])] 高级用法12345678910111213np.split(a,[2,5,8,10])'''分割值按照列表的形式存在它是这样分割的a的shape是10，10。轴是10列表中第一个2，代表分割前2行，还剩下3-10，共7行。列表中第二个5，分割剩下的行直到5，还剩下6-10，共4行。列表中第三个8，分割剩下的行直到8，还剩下9-10，共2行。列表中第四个10，分割剩下的行直到10，还剩下0，共0行。这样的方法会使得还会多余一个空的array''' [array([[ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20]]), array([[21, 22, 23, 24, 25, 26, 27, 28, 29, 30], [31, 32, 33, 34, 35, 36, 37, 38, 39, 40], [41, 42, 43, 44, 45, 46, 47, 48, 49, 50]]), array([[51, 52, 53, 54, 55, 56, 57, 58, 59, 60], [61, 62, 63, 64, 65, 66, 67, 68, 69, 70], [71, 72, 73, 74, 75, 76, 77, 78, 79, 80]]), array([[ 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], [ 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]]), array([], shape=(0, 10), dtype=int64)]","categories":[{"name":"coding","slug":"python","permalink":"https://www.qwerse.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.qwerse.com/tags/python/"}],"keywords":[{"name":"coding","slug":"python","permalink":"https://www.qwerse.com/categories/python/"}]},{"title":"局域网搭建dns","slug":"blog/linux/灞€鍩熺綉dns鎼缓","date":"2018-01-15T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2018/01/16/blog/linux/灞€鍩熺綉dns鎼缓/","link":"","permalink":"https://www.qwerse.com/2018/01/16/blog/linux/灞€鍩熺綉dns鎼缓/","excerpt":"","text":"选择dns软件”pdnsd”用过dnsmasq和bind。都不太符合自己的意思。尤其是bind简直是太笨重了。 pdnsd的优势Ubuntu16.04默认使用dnsmasq作为dns解析服务，换句话说，一个Ubuntu 16.04LTS的电脑本身就是一个开放53端口的DNS服务器，听起来有点像买Ubuntu电脑送DNS服务器的感觉。但事实确实是这样的，因为Ubuntu默认开机启动dnsmasq服务，而且即使你把它stop了，Ubuntu还会定时重启，而且在启动dnsmasq服务的时候，Ubuntu系统会自动修改/etc/resolv.conf这个默认DNS服务指向文件为127.0.0.1，导致你试图修改这个文件改变你的DNS服务器地址后会莫名其妙被改回127.0.0.1。但是我之所以要用Pdnsd替换点dnsmasq的主要目的还是为了防止DNS污染。 首先Pdnsd有这样几个优势 1、可以将UDP协议的DNS请求转换为TCP协议进行发送，通过这种方式避免DNS污染 2、pdnsd可以选择性的拒绝一些常见的被污染的目标地址，直接通过境内的dns服务器即可获得正确结果 3、pdnsd可以做本地DNS缓存，而且可以自由设置过期时间，对于已缓存的DNS地址，局域网内其他电脑在DNS解析上的耗时可以缩减到1ms以内，大大提升了电脑的上网速度 Ubuntu 16.04LTS系统为例详细讲解安装过程1、 第一步：将dnsmasq的监听端口从53端口挪到其他端口首先要科普一下，Ubuntu系统中的dnsmasq并不只有一个实例在运行，而是会开启多个，在我的电脑中因为开启了Ubuntu自带的Wifi分享功能，本机多了一个内网IP地址10.42.0.1，并且作为这个Wifi网络的DNS服务器，所以我现在电脑上运行着三个dnsmasq进程。查看电脑53端口的占用情况，可以用一下命令sudo netstat -apn | grep 53 我的计算机有线网卡的内网地址为192.168.1.100，并且分享了一个Wifi网络，在这个Wifi网络中的内网地址是10.42.0.1在Ubuntu默认情况下，所有网卡的53端口（包括ipv6地址）均会被dnsmasq所占，并且不止一个dnsmasq实例正在运行。 注：之所以有127.0.0.1:53而没有192.168.1.100:53或者0.0.0.0:53是Ubuntu默认不向局域网开放自己的53端口，理由当然是为了安全，防止让你真的变成一台局域网DNS服务器，而有10.42.0.1:53的原因是本计算机分享了一个Wifi，在这个Wifi局域网中，这台电脑既当网关也当DNS服务器，该wifi中的所有电脑被DHCP分配到的DNS服务器均为10.42.0.1,所以对于这个内网，dnsmasq是向局域网开放自己的53端口的。注：运行在127.0.0.1的:53的dnsmasq进程和运行在10.42.0.1的dnsmasq是两个 不同的进程，使用不同的配置文件在Ubuntu默认情况下，127.0.0.1和0.0.0.0的53端口一般由同一个dnsmasq进程所占，而其他网段比如10.42.0.1由另一个dnsmasq进程控制，由于10.42.0.1是笔记本共享出的wifi，所以这里的dnsmasq除了做dns转发以外，还有一个更重要的作用就是做DHCP服务器动态为连接热点的设备分配IP地址。那么如何观察本机一共有多少dnsmasq进程，这些dnsmasq的配置文件又各是谁呢？可以用如下指令 ps -fC dnsmasq|more 现在我们要用pdnsd替换掉的就是监听在127.0.0.1:53和192.168.1.81:53和0.0.0.0:53这几个端口的dnsmasq服务，也就是pid为12625的这个dnsmasq，其他的dnsmasq因为并没有挤占端口，而且还要作为DHCP服务使用，所以我们不要停掉他们。那么如何将dnsmasq的监听端口挪走呢，只需要修改dnsmasq的配置文件并重启即可，虽然仅仅stop掉dnsmasq的服务也有用，但是Ubuntu隔一段时间又会自动重启并同时修改/etc/resolv.conf文件，所以最好的方式还是把dnsmasq的端口挪走一劳永逸。首先我们停止dnsmasq的服务 sudo service dnsmasq stop 现在使用netstat -nl观察端口的监听情况是不是发现127.0.0.1:53和192.168.1.81:53和0.0.0.0:53这几个53端口都已经没有啦，而且并没有影响10.42.0.1:53上做DHCP服务的dnsmasq的运行。 注：为什么127.0.0.1:53没有了而10.42.0.1:53还是由dnsmasq所占，原因如上面已经提到过的，这两个端口的dnsmasq并不是一个dnsmasq进程，所使用配置文件和发挥的功能也不一样，而我们要修改两个网段最终的DNS服务程序，只需要将127.0.0.1:53这个dnsmasq换掉即可，不需要管10.42.0.1:53这个内网的dnsmasq进程然后修改dnsmasq的配置文件 sudo nano /etc/dnsmasq.conf 在第十行将dnsmasq的监听端口从53挪到9053，这样我们就把系统默认的dnsmasq的端口挪到了9053 然后重启dnsmasq服务 sudo service dnsmasq restart 现在在使用netstat -nl查看，是不是发现原来127.0.0.1:53和192.168.1.81:53和0.0.0.0:53这几个53端口都变成9053啦，现在我们已经为pdnsd服务腾出了工作端口，下一步我们可以安装pdnsd了 注：于此同时，由于我们系统的dns服务器指向还是127.0.0.1,所以此时你的电脑已经上不了忘了，解决方法是修改/etc/resolv.con文件将127.0.0.1换成ISP提供的DNS服务器或者114.114.114.114或者阿里的223.5.5.5等等。 2、安装Pdnsd服务sudo apk-get install pdnsd 在安装时会跳出一个选择框，我们选manual（注意如果此时提示你网络问题请到/etc/resolv.conf文件中把dns服务器地址从127.0.1.1改到114.114.114.114）安装完pdnsd服务之后我们需要修改它的配置文件，主要目的是设置两组DNS服务器，第一组是国内的114.114.114.114,第二组是OpenDNS的5353端口，114.114.114.114的53端口即使使用TCP连接解析也会返回一些脏地址，但我们仍然要用他的原因它的ping通率要比OpenDns要高，主要作用是加速一些国内正常DNS的解析，防止访问国内网站时走OpenDNS导致解析变慢。所以下面配置文件中的114.114.114.114也可以换成你当地ISP分给你的DNS服务器，尤其是在114.114.114.114 ping不通的情况下。另外，下面配置文件中的reject列表也非常重要，只有当114.114.114.114返回脏地址在这个列表中时才会触发pdnsd再发送一个请求到OpenDNS，所以务必要将114.114.114.114所有的脏地址都收录到这个列表中。同时，如果你本地ping不通OpenDNS的两个地址时，有两种方式可以解决，第一种是使用Redsocks+代理将tcp协议的DNS查询请求加密发送到国外代理服务器，另一种是使用能ping通的国外其他DNS服务器，尽量避开53端口，也就是说尽量找国外支持53端口以外进行解析的DNS服务器。 sudo nano /etc/pdnsd.conf 将这个文件修改如下 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123// Read the pdnsd.conf(5) manpage for an explanation of the options. /* Note: this file is overriden by automatic config files when /etc/default/pdnsd AUTO_MODE is set and that /usr/share/pdnsd/pdnsd-$AUTO_MODE.conf exists */ global &#123; perm_cache=4096; cache_dir=&quot;/var/cache/pdnsd&quot;; run_as=&quot;pdnsd&quot;; server_ip = 192.168.1.81; # 将自己的有线网卡的局域网地址设为工作地址，这样可以方便局域网用户把你的电脑当成DNS服务器,这里要换成你的地址，但是好像0.0.0.0我试过不行 server_port=53; # 使用DNS协议默认的53号地址 status_ctl = on; query_method=tcp_only; #非常重要，使用tcp协议请求DNS结果，防止被污染 neg_domain_pol = off; paranoid = on; par_queries = 1; min_ttl = 6h; max_ttl = 12h; timeout = 10; &#125; /* with status_ctl=on and resolvconf installed, this will work out from the box this is the recommended setup for mobile machines */ server &#123; label = &quot;routine&quot;; # 这个随便写 ip = 114.114.114.114; # 这里为上级 dns 的 ip 地址，如果8.8.8.8能够ping通，可以用8.8.8.8 timeout = 5; reject = 74.125.127.102, #这里非常重要，这些ip是防火墙喜欢将DNS污染到的目标地址，也就是脏地址，你可以使用nslookup命令查询当地的脏地址并补充在这个列表中，如果114.114.114.114返回脏地址后pdnsd会自动重新发送DNS请求到下面的OpenDNS服务器，如果一个脏地址没有在列在这里，那么还是会收到污染的结果 74.125.155.102, 74.125.39.102, 74.125.39.113, 209.85.229.138, 128.121.126.139, 159.106.121.75, 169.132.13.103, 192.67.198.6, 202.106.1.2, 202.181.7.85, 203.161.230.171, 203.98.7.65, 207.12.88.98, 208.56.31.43, 209.145.54.50, 209.220.30.174, 209.36.73.33, 211.94.66.147, 213.169.251.35, 216.221.188.182, 216.234.179.13, 243.185.187.39, 37.61.54.158, 4.36.66.178, 46.82.174.68, 59.24.3.173, 64.33.88.161, 64.33.99.47, 64.66.163.251, 65.104.202.252, 65.160.219.113, 66.45.252.237, 69.55.52.253, 72.14.205.104, 72.14.205.99, 78.16.49.15, 8.7.198.45, 93.46.8.89, 37.61.54.158, 243.185.187.39, 190.93.247.4, 190.93.246.4, 190.93.245.4, 190.93.244.4, 65.49.2.178, 189.163.17.5, 23.89.5.60, 49.2.123.56, 54.76.135.1, 77.4.7.92, 118.5.49.6, 159.24.3.173, 188.5.4.96, 197.4.4.12, 220.250.64.24, 243.185.187.30, 249.129.46.48, 253.157.14.165; reject_policy = fail; exclude = &quot;.google.com&quot;, &quot;.cn&quot;, #排除国内DNS解析，如果正常翻，则可以在前面加#注释 &quot;.baidu.com&quot;, #排除国内DNS解析，如果正常翻，则可以在前面加#注释 &quot;.qq.com&quot;, #排除国内DNS解析，如果正常翻，则可以在前面加#注释 &quot;.gstatic.com&quot;, &quot;.googleusercontent.com&quot;, &quot;.googlepages.com&quot;, &quot;.googlevideo.com&quot;, &quot;.googlecode.com&quot;, &quot;.googleapis.com&quot;, &quot;.googlesource.com&quot;, &quot;.googledrive.com&quot;, &quot;.ggpht.com&quot;, &quot;.youtube.com&quot;, &quot;.youtu.be&quot;, &quot;.ytimg.com&quot;, &quot;.twitter.com&quot;, &quot;.facebook.com&quot;, &quot;.fastly.net&quot;, &quot;.akamai.net&quot;, &quot;.akamaiedge.net&quot;, &quot;.akamaihd.net&quot;, &quot;.edgesuite.net&quot;, &quot;.edgekey.net&quot;; &#125; server &#123; # Better setup dns server(DON&apos;T USE PORT 53) on your own vps for faster proxying label = &quot;special&quot;; # 这个随便写 ip = 208.67.222.222,208.67.220.220; # 这里为上级 dns 的 ip 地址 port = 5353; proxy_only = on; timeout = 5; &#125; 保存后重启pdnsd发现并没有像我们想的一样53端口出现监听，因为我们还需要将pdnsd以守护模式运行 sudo nano /etc/default/pdnsd 将START_DAEMON=no改为START_DAEMON=yes 现在可以重启pdnsd服务了 sudo /etc/init.d/pdnsd restart 重启之后再使用netstat -nl查看端口情况，是不是53端口已经正在使用了，或者使用sudo netstat -apn | grep 53看看是不是由pdnsd服务占用53端口 最后一步，就是将我们本机的DNS服务器地址指向pdnsd sudo nano /etc/resolv.conf 将原来的127.0.1.1改成上面配置文件配置的地址，即如果是局域网地址，就填192.168.1.81，视你自己的网络情况而定，如果上面填的是0.0.0.0，那么此处就填127.0.0.1 然后再使用nslookup www.baidu.com和nslookup www.facebook.com看一下dns解析结果是否正确如果baidu.com无法解析说明Pdnsd配置有问题，此时要检查53端口是否已被监听如果baidu.com正常而facebook.com无法解析或者返回错误地址，首先我们可以查看并清空一下缓存 sudo pdnsd-ctl dumpsudo pdnsd-ctl empty-cache 如果还是返回污染后的地址，就把这个污染地址加到上面/etc/pdnsd.conf的脏域名列表中，就可以获得正确结果了那么如何判断DNS解析后的域名是否正确呢，方法是nslookup www.twittter.com 和nslookup www.youtube.com，真的解析地址会返回多个解析结果，而污染后的结果只有一个如下图中前两个是错误的解析结果，后两个是正确的解析结果，或者你还可以通过webdnstools.com这个网站去查询正确的解析结果与本地的结果进行比对 —-局域网设置内网域名—– a.最简单办法直接用pdnsd-ctl 插入一条 A 记录,举例： pdnsd-ctl add a 127.0.0.1 www.linuxbyte.org. 900（900 为TTL 值） 同样你可以用pdnsd-ctl add 插入其他的mx，ns，cname 记录等b.第一方法适合临时做一些修改，要想真正的劫持一个域名可以在 pdnsd.conf 中加入 rr section。举例： 12345rr &#123;name = linuxbyte.org;ns = localhost;soa = localhost, root.localhost, 42, 86400, 900, 86400, 86400;&#125; 这个是劫持了ns 记录，把域名解析交给你指定的dns 服务器来做。​1234rr &#123;name = *.linuxbyte.org;cname = www.linuxsky.org;&#125; 这里把所有linuxbyte.org 的二级域名都做了cname到了 www.linuxsky.org 1234rr &#123;name = www.linuxbyte.org;a = 192.168.0.123&#125; 直接插入一条A 记录。 `","categories":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}],"tags":[{"name":"dns","slug":"dns","permalink":"https://www.qwerse.com/tags/dns/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}]},{"title":"lamp构架下的网站环境搭建","slug":"blog/linux/lamp鏋勬灦涓嬬殑缃戠珯鐜鎼缓","date":"2017-11-29T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2017/11/30/blog/linux/lamp鏋勬灦涓嬬殑缃戠珯鐜鎼缓/","link":"","permalink":"https://www.qwerse.com/2017/11/30/blog/linux/lamp鏋勬灦涓嬬殑缃戠珯鐜鎼缓/","excerpt":"","text":"apache2.4编译安装httpd依赖于apr, apr-util apr全称为apache portable runtime，能实现httpd跨平台运行 httpd-2.4 依賴于1.4＋及以上版本的apr apr-1.5.0.tar.bz2 apr-util-1.5.3.tar.bz2 httpd-2.4.9.tar.bz2 pcre-devel包 openssl-devel 2、编译安装 # yum install gcc # yum install pcre-devel # tar xf apr-1.5.0.tar.bz2 # cd apr-1.5.0 # ./configure --prefix=/usr/local/apr (--prefix指定apr安装的目录) # make # make install # tar xf apr-util-1.5.3.tar.bz2 # cd apr-util-1.5.3 # ./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr # make &amp;&amp; make install ###该项被漏掉，补充@20160714 # tar xf httpd-2.4.9.tar.bz2 以下为几个主要的配置项 --sysconfdir=/etc/httpd24 指定配置文件路径 --enable-so 启动模块动态装卸载 --enable-ssl 编译ssl模块 --enable-cgi 支持cgi机制（能够让静态web服务器能够解析动态请求的一个协议） --enable-rewrite 支持url重写 --Author : Leshami --with-zlib 支持数据包压缩 --Blog : http://blog.csdn.net/leshami --with-pcre 支持正则表达式 --with-apr=/usr/local/apr 指明依赖的apr所在目录 --with-apr-util=/usr/local/apr-util/ 指明依赖的apr-util所在的目录 --enable-modules=most 启用的模块 --enable-mpms-shared=all 以共享方式编译的模块 --with-mpm=prefork 指明httpd的工作方式为prefork # cd httpd-2.4.9 # ./configure \\ --with-apr=/usr/local/apr \\ --with-apr-util=/usr/local/apr-util \\ --prefix=/usr/local/apache \\ --sysconfdir=/etc/httpd24 \\ --enable-so \\ --enable-ssl \\ --enable-cgi \\ --enable-rewrite \\ --with-zlib \\ --with-pcre \\ --with-mpm=prefork \\ --enable-modules=most \\ --enable-mpms-shared=all # make # make install 123apache的启动：/usr/local/apache/bin/apachectl start(stop,restart)制作systemctl的启动脚本，网上找一找就行。一定要记得iptables -F 和setenforce 0.不然别人访问不了你的。 安装mysqlmysql直接使用的yum安装，编译太慢烦了。用docker更加简单。 一般网上给出的资料都是 123#yum install mysql#yum install mysql-server#yum install mysql-devel 安装mysql和mysql-devel都成功，但是安装mysql-server失败，如下： 12345678[root@yl-web yl]# yum install mysql-serverLoaded plugins: fastestmirrorLoading mirror speeds from cached hostfile * base: mirrors.sina.cn * extras: mirrors.sina.cn * updates: mirrors.sina.cnNo package mysql-server available.Error: Nothing to do 查资料发现是CentOS 7 版本将MySQL数据库软件从默认的程序列表中移除，用mariadb代替了。 有两种解决办法： 1、方法一：安装mariadb MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可。开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。 安装mariadb，大小59 M。 1[root@yl-web yl]# yum install mariadb-server mariadb mariadb数据库的相关命令是： systemctl start mariadb #启动MariaDB systemctl stop mariadb #停止MariaDB systemctl restart mariadb #重启MariaDB systemctl enable mariadb #设置开机启动 所以先启动数据库 1[root@yl-web yl]# systemctl start mariadb 然后就可以正常使用mysql了 12345678910111213141516171819202122[root@yl-web yl]# mysql -u root -pEnter password: Welcome to the MariaDB monitor. Commands end with ; or \\g.Your MariaDB connection id is 3Server version: 5.5.41-MariaDB MariaDB ServerCopyright (c) 2000, 2014, Oracle, MariaDB Corporation Ab and others.Type &apos;help;&apos; or &apos;\\h&apos; for help. Type &apos;\\c&apos; to clear the current input statement.MariaDB [(none)]&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || test |+--------------------+4 rows in set (0.00 sec)MariaDB [(none)]&gt; 安装mariadb后显示的也是 MariaDB [(none)]&gt; ，可能看起来有点不习惯。下面是第二种方法。 2、方法二：官网下载安装mysql-server123# wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm# rpm -ivh mysql-community-release-el7-5.noarch.rpm# yum install mysql-community-server 安装成功后重启mysql服务。 1# service mysqld restart 有时候直接启动会报错记得要关闭selinux 0```1234如果想变动mysql的数据库位置可以修改/etc/my.cnf文件碰到数据库起不来的情况一般都是文件权限的问题数据库要用到的文件和文件夹一律```chown mysql:mysql filename 初次安装mysql，root账户没有密码。 12345678910111213141516171819202122232425[root@yl-web yl]# mysql -u root Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 3Server version: 5.6.26 MySQL Community Server (GPL)Copyright (c) 2000, 2015, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\\h&apos; for help. Type &apos;\\c&apos; to clear the current input statement.mysql&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || test |+--------------------+4 rows in set (0.01 sec)mysql&gt; 设置密码 1234mysql&gt; set password for &apos;root&apos;@&apos;localhost&apos; =password(&apos;password&apos;);Query OK, 0 rows affected (0.00 sec)mysql&gt; 不需要重启数据库即可生效。 把在所有数据库的所有表的所有权限赋值给位于所有IP地址的root用户。 mysql&gt; grant all privileges on *.* to root@&#39;%&#39;identified by &#39;password&#39;; 如果是新用户而不是root，则要先新建用户 mysql&gt;create user &#39;username&#39;@&#39;%&#39; identified by &#39;password&#39;; 此时就可以进行远程连接了。 安装php7.0php源码安装比较好，因为这个解释器。编译效率好。 首先上个代码，来个直观印象 1234567891011121314151617181920212223242526272829303132333435363738./configure --prefix=/usr/local/php7 \\ --with-curl \\ --with-freetype-dir \\ --with-gd \\ --with-gettext \\ --with-iconv-dir \\ --with-kerberos \\ --with-libdir=lib64 \\ --with-libxml-dir \\ --enable-fpm --with-openssl \\ --with-pcre-regex \\ --with-pdo-sqlite \\ --with-pear \\ --with-png-dir \\ --with-xmlrpc \\ --with-xsl \\ --with-zlib \\ --with-apxs2=/usr/local/apache/bin/apxs \\ --enable-fpm \\ --enable-bcmath \\ --enable-libxml \\ --enable-inline-optimization \\ --enable-gd-native-ttf \\ --enable-mbregex \\ --enable-mbstring \\ --enable-opcache \\ --enable-pcntl \\ --enable-shmop \\ --enable-soap \\ --enable-sockets \\ --enable-sysvsem \\ --enable-xml \\ --enable-zip \\ --enable-mysqlnd \\ --with-mysqli=mysqlnd \\ --with-pdo-mysql=mysqlnd --with-mysql-sock=/var/lib/mysql/mysql.sock php下载www.php.net。下载7.0的版本就行了，然后在安装编译需要的程序。 1yum -y install libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel MySQL pcre-develcurl-devel libxslt-devel 下载后解压进入执行上面的代码，就能够编译执行.make完执行make test检测一下，没有问题就make install。 安装完成，复制php配置文件到安装目录 php.ini-developmentlink1234配置http.conf 配置http.conf//加载解析php模块LoadModule php7_module modules/libphp7.so //解析后缀名.php的文件 SetHandler application/x-httpd-php //默认页面 DirectoryIndex index.php index.html`","categories":[{"name":"Linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}],"tags":[{"name":"Linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"Linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}]},{"title":"thinkpad x260重装系统遇到的麻烦及解决方式","slug":"blog/windows/thinkpad+x260绯荤粺閲嶈","date":"2017-11-22T16:00:00.000Z","updated":"2018-08-02T10:39:56.416Z","comments":true,"path":"2017/11/23/blog/windows/thinkpad+x260绯荤粺閲嶈/","link":"","permalink":"https://www.qwerse.com/2017/11/23/blog/windows/thinkpad+x260绯荤粺閲嶈/","excerpt":"","text":"审计部的小伙伴电脑出现了问题，用尽了各种方法： ###u盘启动 u盘是好的，里面也有pe。但电脑就是识别不了，按照网上的参数设置bios还是不行。索性就放弃了，用光盘噶事。 ###外置光驱启动 x260本身没有光驱，幸好老王拿来了外置光驱，我马上拿来用。 能看到dvd的启动项，但是进不去光盘，选了还是进入硬盘的系统。 思来想去，既然保险的方法，都不能用。那我就本地硬盘安装，速度快还高效。 就怕装的过程中出错，那就危险大发了，因为没有保险手段恢复。 #####首先本地硬盘安装要有两样东西 onekey和ghost镜像 非常简单打开onekey指定ghost镜像，就好了，重启自动使用dos安装，给力。 系统装好了，没有网卡驱动。在官网上下网卡驱动，再下个联想驱动管理。把所有的驱动都打好。就OK了 其实我感觉外置光盘应该能够装系统，ghost安装好之后，电脑重启，默认从光盘启动（看到了windows10dvd启动界面）。 感觉外置光盘，应该是给电脑装系统的万能工具。 本地硬盘安装，也是非常不错的。但前提是现在用的系统能够进入系统执行onekey。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.qwerse.com/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.qwerse.com/tags/windows/"}],"keywords":[{"name":"windows","slug":"windows","permalink":"https://www.qwerse.com/categories/windows/"}]},{"title":"利用ngrok远程内网机器","slug":"blog/linux/鍒╃敤ngrok杩滅▼鍐呯綉鏈哄櫒","date":"2017-10-28T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2017/10/29/blog/linux/鍒╃敤ngrok杩滅▼鍐呯綉鏈哄櫒/","link":"","permalink":"https://www.qwerse.com/2017/10/29/blog/linux/鍒╃敤ngrok杩滅▼鍐呯綉鏈哄櫒/","excerpt":"","text":"需要用ngrok把公司内网的服务器穿出来，好22连接管理。linux没有windows下有andesk和一些好用的远程桌面工具，只有ngrok这个比较好的工具 ####1，安装好go环境，ngrok是用go编写的。 1、下载go的软件包 1wget http://qwerse.hk.ufileos.com/go1.4.2.linux-amd64.tar.gz 2、解压出来可以随便指定位置 1tar -zxvf go1.4.2.linux-386.tar.gzmv go /usr/local/ 3、go的命令需要做软连接到/usr/bin 1ln -s /usr/local/go/bin/* /usr/bin/ 2，安装git安装git1、安装git，我安装的是2.6版本，防止会出现另一个错误，安装git所需要的依赖包 1yum -y install zlib-devel openssl-devel perl hg cpio expat-devel gettext-devel curl curl-devel perl-ExtUtils-MakeMaker hg wget gcc gcc-c++ 2、下载git 1文本模式复制代码 1wget https://www.kernel.org/pub/software/scm/git/git-2.6.0.tar.gz 3、解压git 1tar zxvf git-2.6.0.tar.gz 4、编译git 1cd git-2.6.0./configure --prefix=/usr/local/gitmakemake install 5、创建git的软连接 1ln -s /usr/local/git/bin/* /usr/bin/ 3,下载及编译ngrok下载ngrok源码 123cd ~/your_download_dirgit clone https://github.com/inconshreveable/ngrok.git ngrokcd ngrok 生成证书 注意这里有个NGROK_BASE_DOMAIN；假设最终需要提供的地址为aevit.your-domain.com，则NGROK_BASE_DOMAIN设置为your-domain.com；假设最终需要提供的地址为aevit.ngrok.your-domain.com，则NGROK_BASE_DOMAIN设置为ngrok.your-domain.com； 下面以ngrok.your-domain.com为例： 12345openssl genrsa -out rootCA.key 2048openssl req -x509 -new -nodes -key rootCA.key -subj &quot;/CN=ngrok.your-domain.com&quot; -days 5000 -out rootCA.pemopenssl genrsa -out device.key 2048openssl req -new -key device.key -subj &quot;/CN=ngrok.your-domain.com&quot; -out device.csropenssl x509 -req -in device.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out device.crt -days 执行完以上命令，就会在ngrok目录下新生成6个文件 123456device.crtdevice.csrdevice.keyrootCA.keyrootCA.pemrootCA.srl ngrok通过bindata将ngrok源码目录下的assets目录（资源文件）打包到可执行文件(ngrokd和ngrok)中 去，assets/client/tls 和 assets/server/tls 下分别存放着用于ngrok和ngrokd的默认证书文件，我们需要将它们替换成我们自己生成的：(因此这一步务必放在编译可执行文件之前) 123cp rootCA.pem assets/client/tls/ngrokroot.crtcp device.crt assets/server/tls/snakeoil.crtcp device.key assets/server/tls/snakeoil.key 编译linux端版本 1234make clean# 如果是32位系统，这里 GOARCH=386GOOS=linux GOARCH=amd64 make release-server release-client 最后成功的话，会在当前目录生成一个bin文件夹，里面包含了ngrokd和ngrok文件；其中，bin/ngrokd文件是服务端程序；bin/ngrok文件是客户端程序（注意上面指定了GOOS为64位linux的，所以这个文件是不能在mac或win等其他平台跑的，下面将进行说明如何交叉编译） #####服务端启动 1/usr/local/ngrok/bin/ngrokd -domain=&quot;$NGROK_DOMAIN&quot; -httpAddr=&quot;:80&quot; #####客户端使用 在ngrok程序的同级目录下，编写配置文件 1vim ngrok.cfg 内容如下: 123456789101112131415161718server_addr: &quot;ngrok.your-domain.com:4443&quot;trust_host_root_certs: falsetunnels: example: subdomain: &quot;example&quot; #定义服务器分配域名前缀 proto: http: 80 #映射端口，不加ip默认本机 https: 80 web: subdomain: &quot;web&quot; #定义服务器分配域名前缀 proto: http: 192.168.1.100:80 #映射端口，可以通过加ip为内网任意一台映射 https: 192.168.1.100:80 ssh: remote_port: 50001 #服务器分配tcp转发端口，如果不填写此项则由服务器分配 proto: tcp: 22 #映射本地的22端口 使用ngrok12./ngrok -config=./ngrok.cfg -subdomain=blog 80 #映射本机的80端口→blog.ngrok.your-domain.com./ngrok -config ngrok.cfg start ssh #开启ssh的隧道","categories":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}]},{"title":"我的工作","slug":"blog/life/我的工作","date":"2017-10-25T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2017/10/26/blog/life/我的工作/","link":"","permalink":"https://www.qwerse.com/2017/10/26/blog/life/我的工作/","excerpt":"","text":"其实自己也很无赖 优秀员工里没有自己，平时自己也很努力，但好像得不到认可似的。 眼前这份工作是我第一份工作，我很珍惜，但毕竟不是互联网公司，发展的路对于我来说，还是有限制的。 学历到手我就准备辞职了。找一个好的方向发展。 我像linux和python发展，这是必须的。 得不到奖励我也没什么大不了的，没有对不起任何人就行 、继续加油吧。","categories":[{"name":"生活","slug":"lifetime","permalink":"https://www.qwerse.com/categories/lifetime/"}],"tags":[{"name":"工作","slug":"工作","permalink":"https://www.qwerse.com/tags/工作/"}],"keywords":[{"name":"生活","slug":"lifetime","permalink":"https://www.qwerse.com/categories/lifetime/"}]},{"title":"centos启动管理","slug":"blog/linux/centos鍚姩绠＄悊","date":"2017-09-18T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2017/09/19/blog/linux/centos鍚姩绠＄悊/","link":"","permalink":"https://www.qwerse.com/2017/09/19/blog/linux/centos鍚姩绠＄悊/","excerpt":"","text":"当密码忘记的时候可以这么做 在开机界面的启动条按”e”编辑 在内核条上再按”e”编辑 在quit后面添加一个 “1”，和quit要有一个空格。完成后返回按’b’，就能启动了 就能进入单用户模式，改密码了。 按e进不去编辑界面，要输入p，提示输入密码才给编辑，这是grub被锁的原因，这个时候只能用光盘模式修复了！ 这就像windows的pe模式一样的可以改grub的密码。 进入光盘的shell。输入以下命令： chroot mnt/sysimge 再输入passwd root 就能改密码 这是centos6左右的改密码，7有所不同","categories":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}]},{"title":"awk使用方法","slug":"blog/linux/awk鐢ㄦ硶","date":"2017-09-11T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2017/09/12/blog/linux/awk鐢ㄦ硶/","link":"","permalink":"https://www.qwerse.com/2017/09/12/blog/linux/awk鐢ㄦ硶/","excerpt":"","text":"awk是个比较高级的程序，它本身也是一个解释性的编程语言。 awk最重要的功能就是对文本数据进行出来，他比其他文本处理工具更加强大也复杂。 基本常用的格式： 123456789101112131415161718#awk -F: &apos;&#123;print $1&#125;&apos; /etc/passwdrootbindaemonadmlpsyncshutdownhaltmailoperatorgamesftpnobodysystemd-bus-proxysystemd-networkdbussshd 上面是最常用的方法。 深入一点，awk自成一门编程语言肯定也会有if等逻辑语句 常用条件操作符 &lt; &lt;= == != &gt;= ~ !~ 匹配 12345awk -F: &apos;&#123;if (1~/root/) print 0&#125;&apos; /etc/passwdawk -F: &apos;$1~/root/&apos; /etc/passwd上面两条结果都是：root❌0:0:root:/root:/bin/bash ​ ​ ​ 这两条结果都相同 精确匹配 awk -F: &#39;{if($3==&quot;0&quot;) print $0}&#39; /etc/passwd 要记住后面print $0所打印的只是if的结果也就是： 123root❌0:0:root:/root:/bin/bash把print 0 改成 print $3 打印出的结果是0 不匹配 awk -F: &#39;$3 != &quot;0&quot;&#39; /etc/passwd 结果 12345678910111213141516bin:x:1:1:bin:/bin:/sbin/nologindaemon:x:2:2:daemon:/sbin:/sbin/nologinadm:x:3:4:adm:/var/adm:/sbin/nologinlp:x:4:7:lp:/var/spool/lpd:/sbin/nologinsync:x:5:0:sync:/sbin:/bin/syncshutdown:x:6:0:shutdown:/sbin:/sbin/shutdownhalt:x:7:0:halt:/sbin:/sbin/haltmail:x:8:12:mail:/var/spool/mail:/sbin/nologinoperator:x:11:0:operator:/root:/sbin/nologingames:x:12:100:games:/usr/games:/sbin/nologinftp:x:14:50:FTP User:/var/ftp:/sbin/nologinnobody:x:99:99:Nobody:/:/sbin/nologinsystemd-bus-proxy:x:999:998:systemd Bus Proxy:/:/sbin/nologinsystemd-network:x:998:997:systemd Network Management:/:/sbin/nologindbus:x:81:81:System message bus:/:/sbin/nologinsshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin 打印出了以:为分隔符，但是$3位置结果不是0的行。 比较 cat 2 |awk -F: &#39;{if($3==$4) print $1,$3,$4}&#39; 结果 123456root 0 0bin 1 1daemon 2 2nobody 99 99dbus 81 81sshd 74 74 当然也可以使用&lt;和&gt; 使用正规则表达式 cat 2 |awk -F: &#39;$1 ~ /^root/&#39; 结果 root:x:0:0:root:/root:/bin/bash 逻辑运算符 和 &amp;&amp; 或 || 取反 ! 会shell的基本都知道这几个东西，主要是用来进行多个表达式判断用的 cat 2 |awk -F: &#39;{if(1==1 &amp;&amp; 2==3)print $0}&#39; 结果会是0，这就是&amp;&amp;和的意思，两个判断式子都对才行 ||两个判断是对其中一个也行 ！取反 对是错，错是对 AWK高级进阶 awk内置字符串函数 1234567-gsub(r,s) 在整个$0中用s代替r #awk &apos;gsub(/root/,1234)&apos; &#123;print $0&#125; /etc/passwd-gsub(r,s,t) 在t行中用s代替r #awk &apos;gsub(/root/,&quot;deng&quot;) &#123;print $0&#125;&apos; /etc/passwd #！deng一定要是带引号。-index(s,t) 返回s中字符串t的第一位置 # awk &apos;&#123;print index(&quot;qwerse&quot;,&quot;e&quot;)&#125;&apos;-length(s) 返回s长度 awk &apos;&#123;print length($0)&#125;&apos; /etc/passwd-match(s,r) 测试s是否包含匹配r的字符串 #awk -F: &apos;BEGIN &#123;print match(&quot;root1&quot;,root)&#125;&apos;-split(s,a,fs) 在fs上将s分成序列作为一个数组储存在a #awk &apos;BEGIN &#123;print split(&quot;qwerasdrfdsfr&quot;,a,&quot;r&quot;) &#125;END&#123;print a[2]&#125;&apos; /dev/null-printf(fmt,exp) 返回fmt格式化后的exp cat 2 | awk -F: &apos;&#123;print $3=sprintf(&quot;%20d&quot;,$3)&#125;&apos; ​","categories":[{"name":"Linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"Linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}]},{"title":"sed的基本用法","slug":"blog/linux/sed鍒濈骇","date":"2017-09-10T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2017/09/11/blog/linux/sed鍒濈骇/","link":"","permalink":"https://www.qwerse.com/2017/09/11/blog/linux/sed鍒濈骇/","excerpt":"","text":"sed匹配打印主要是使用-p参数进行打印 我最喜欢的还是sed -n ‘1~2p’ filename从第1行开始，每各2个打印一次seq 10 | sed ‘1~2p’ :13579 sed插入、修改、删除、替换 sed与shell的交互要记住一点’’和””区别，’’会把字符串里面的特殊字符给字面化，””会保留特殊的字符含义，下面我举个例子：12345#A=&apos;qwerse&apos;#echo &apos;this $A&apos;this $A#echo &quot;this $A&quot;this qwerse 一定要避免在脚本中出现此类错误！这是常用的用法，更高级的还需要了解缓存区，想要深入去百度搜搜。","categories":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}]},{"title":"恐惧是自己成长的粮食","slug":"blog/life/恐惧是自己成长的粮食","date":"2017-08-17T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2017/08/18/blog/life/恐惧是自己成长的粮食/","link":"","permalink":"https://www.qwerse.com/2017/08/18/blog/life/恐惧是自己成长的粮食/","excerpt":"","text":"每一天我们平均都要恐惧一次，我的恐惧来自自卑，我怕发言，我怕别人注意到我。我每天都有害怕的东西，但我每次好像都克服了，我事后像获得了无穷的力量一样，我成长了。 ​ 恐惧是不能够消除的，这就好像世界上的属性一样，它跟水一样的。只有勇敢和无畏的精神才能够锻炼自我，使自己变得跟强。 ​ 不要让自己迷失在每一天中，坚持是一种优秀的品质，每一件事只有坚持，才能到达极致。自己的想法永远也不要脱离实际，无水之根，必定会走向灭亡。不要害怕前路的困难阻碍，用勇气去战胜这一切，让自己心服口服。把每一天都当做自己最后的一天去过，更能让自己看清以后的道路。脚踏实地，勇往直前。","categories":[{"name":"life","slug":"life","permalink":"https://www.qwerse.com/categories/life/"}],"tags":[{"name":"GitBlog","slug":"GitBlog","permalink":"https://www.qwerse.com/tags/GitBlog/"}],"keywords":[{"name":"life","slug":"life","permalink":"https://www.qwerse.com/categories/life/"}]},{"title":"ubuntu16.04/boot分区满了,更新内核时导致apt出现错误","slug":"blog/linux/boot鍒嗗尯婊′簡+鏇存柊鍐呮牳鏃跺鑷碼pt鍑虹幇閿欒","date":"2017-08-15T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2017/08/16/blog/linux/boot鍒嗗尯婊′簡+鏇存柊鍐呮牳鏃跺鑷碼pt鍑虹幇閿欒/","link":"","permalink":"https://www.qwerse.com/2017/08/16/blog/linux/boot鍒嗗尯婊′簡+鏇存柊鍐呮牳鏃跺鑷碼pt鍑虹幇閿欒/","excerpt":"","text":"问题场景： ​ 更新内核，出现问题，提示文件写入不了/boot分区。仔细用 df -h 一看，/boot分区占用100%了。 ​ 这个时候apt也用不了了，什么软件也安装不了，提示依赖问题。 问题总结： ​ 更新内核时由于需要安装到/boot分区，但是/boot分区是满的，无法更新软件。导致apt的安装程序收阻，这也是一个bug吧。完全无法恢复，只能扩大/boot分区，才行。 解决方法： 扩大/boot分区​ 假设有如下几个分区： /dev/sda1 /boot 500M /dev/sda2 / 400G /dev/dm-0 swap 4G /dev/sda3 2G #新的分区，用来替换现行的/boot分区 #####格式化新分区为ext4,并设置为主分区： ​ 在图形界面使用gparted这个软件，sudo apt-get install gparted。来进行硬盘操作。 具体的使用方法我就不多说了，这不是主题，既然会玩linux，这就不是问题。 挂在新的分区到/boot，替换旧的/boot分区这个有个必须的操作，需要把旧分区的内容全部复制到新分区上 ​ ​ 挂在新硬盘到/mnt分区：sudo mount /dev/sda3 /mnt ​ 把旧/boot分区的内容复制到新分区上：sudo rsync -av /boot/ /mnt/ ​ 卸载原/boot分区：sudo umount /boot ​ 卸载新分区所在的mnt文件夹：sudo umount /mnt ​ 挂在新分区到/boot下：sudo mount /dev/sda3 /boot 把更改信息添加到/etc/fstab文件，这是必须的，不然开不了机​ 查看新分区的UUID信息：sudo lbkid #查看/dev/sda3分区的UUID ​ 如下例子： ​ UUID=883fa013-48ba-473e-b8bc-5c4d910872ff /boot ext4 defaults 02 ​ 把新分区的UUID写到到文件里，覆盖旧分区的UUID。 ###重启开机，运行sudo apt-get install -f 就行了 ​ ​","categories":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}]},{"title":"h3cne的放弃","slug":"blog/python/h3cne鑰冭瘯鏀惧純","date":"2017-07-18T16:00:00.000Z","updated":"2018-08-02T10:39:56.416Z","comments":true,"path":"2017/07/19/blog/python/h3cne鑰冭瘯鏀惧純/","link":"","permalink":"https://www.qwerse.com/2017/07/19/blog/python/h3cne鑰冭瘯鏀惧純/","excerpt":"","text":"h3cne的放弃我信奉一个原则：对一件事，要么就做好，要么就不做。这是对自己负责，也是对别人负责。 上次开个帖子说了我要在8月考个h3cne，但是现在开这个帖子，我要承认我放弃了他。 最终的原因，其实还是在我自己这一方面，把精力太分散了。没有精力去考h3cne。 近期把精力都放在了python的爬虫上，但是精力虽然放在了python上，但是我总是逃避学习python，总是想着睡觉。 这就是很尴尬了。 适当的休息是必须的，学习始终是放在第一位的，学习才能碰见更好玩的事情。 h3cne这个证可以让别人帮你代考，这就搞得没意思了，侧面的说明，这个证一点含金量都没有。 好好学习python，只是为了更好玩，顺便带点加薪。^……^ 也没有什么想说的，期待自己的改变。","categories":[{"name":"python","slug":"python","permalink":"https://www.qwerse.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.qwerse.com/tags/python/"}],"keywords":[{"name":"python","slug":"python","permalink":"https://www.qwerse.com/categories/python/"}]},{"title":"windows下硬盘安装linux(全能版)","slug":"blog/windows/windows涓嬪畨瑁卨inux鍏ㄦ柟浣嶈瀹炵敤","date":"2017-07-12T16:00:00.000Z","updated":"2018-08-02T03:15:26.872Z","comments":true,"path":"2017/07/13/blog/windows/windows涓嬪畨瑁卨inux鍏ㄦ柟浣嶈瀹炵敤/","link":"","permalink":"https://www.qwerse.com/2017/07/13/blog/windows/windows涓嬪畨瑁卨inux鍏ㄦ柟浣嶈瀹炵敤/","excerpt":"","text":"本文主要是对windows下硬盘安装linux进行知识梳理。用到的环境：win7(64)+centos6.9 软件下载地址：http://qwerse.hk.ufileos.com/linuxyp安装.7z 安装所需软件1.分区助手专业版(必需)：用来对硬盘分区，将磁盘的一部分格式化成Linux可以识别的ext3格式 2.extfs ：主要是在windows下可以读写ext3的分区 3.EasyBCD(必需)：用于添加和修改启动项 4.WinGrub(建议使用)：用于看分区编号 5.动态磁盘转换器(视情况)：Linux只能安装在基本磁盘，我是因为第一次安装错误导致磁盘变成了动态磁盘，所以需要用到这个，关于动态磁盘的概念请自行百度，一般现在的系统都是基本磁盘。 6.CentOS-6.9.iso : 镜像文件 CentOS的安装文件需要自行另外下载(各大高校的ftp上应该有)或者购买安装光碟。 下面主要介绍硬盘安装双系统的方法，光盘安装的步骤会少些，也一并介绍了： 在Windows7上面的准备工作打开磁盘管理器：Win徽标键+R键调出运行框，输入指令diskmgmt.msc回车调出磁盘管理器。在最后一个分区上面右键选择压缩卷，如果磁盘空间不够的话一定注意要备份该分区上的数据哦 ！！！也可以选择删除卷，但这样做的话一定要将数据备份 ！！！压缩多少视自己硬盘情况和想要Linux系统占用多大空间而定，硬盘大的话建议100G以上。这步完成后磁盘上会出现一部分未分配空间，如下图： 安装分区助手专业版: 在磁盘未分配空间上右键-&gt;创建分区，创建一个10GB的分区用于存放CentOS 6.9的安装文件(光盘安装可以跳过这步)， 这里的文件系统说明一下，如果是安装32位的CentOS的话，因为安装文件小于4GB，可以选择使用FAT32文件系统。如果是安装64位的CentOS，则只能使用EXT3的文件系统。在高级选项中记得选择创建为“逻辑分区”。 确定后在主界面选择提交执行。 在剩下的未分配空间上创建一个Ext3格式的主分区，方法同上。 但是注意必须在高级选项中选择创建为“主分区”，如果“创建为”后面是不可以选择为“主分区”的，则说明主分区的数量已经到达上限，可以用下面方法将其中一个原本为“主分区”磁盘转换为“逻辑分区”。 安装extfs软件 安装完成后在分配的10GB磁盘空间上右键-&gt;Service Management，在弹出的页面选点Start，再点Apply。如下图，注意勾选项： 然后在“我的电脑”中就可以看到ext3格式的10GB的空间了。 将CentOS-6.9-x86_64.iso也复制到10GB的存放分区中。 安装WinGrub，在Tool-&gt;Partition List打开的页面中找到存放10GB的分区的编号：如：我这里是(hd0,5)，记下来这个编号，后面有用。 安装EasyBCD，打开后找到Add New Entry，点NeoGrub标签。点Install然后点Configure。 在弹出的文档中加入下面内容，这里的(hd0,5)是上一步中找到的分区编号 title Install CentOS kernel (hd0,5)/isolinux/vmlinuz initrd (hd0,5)/isolinux/initrd.img 保存后重启。 开始安装！！！。。。。 这里就会提示要写磁盘了： 这里一定要更改设置，否则他会默认把启动文件放到Windows所在分区，这样会损坏Win7的启动文件，造成Win7无法启动！！！ 建议选Desktop，这个安装最完整： 好了，完成： 3.启动进入Win7之后打开EasyBCD,在Add New Entry的NeoGrub标签下点Remove。然后如图添加一个CentOS 6.9的启动项，安装了CentOS系统的磁盘分区一定要选对： Add Entry重启后就可以进入CentOS 6.9了。 4.原来放CentOS系统安装文件的那10GB的分区可以删除了还给Win7使用，这步之后磁盘号可能会发生变化，导致不能进入CentOS，这种情况下需要重复一下上面的第3步。","categories":[{"name":"windows","slug":"windows","permalink":"https://www.qwerse.com/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://www.qwerse.com/tags/windows/"}],"keywords":[{"name":"windows","slug":"windows","permalink":"https://www.qwerse.com/categories/windows/"}]},{"title":"用wingide6,搭建python开发环境","slug":"blog/python/wingide6鐨勬惌寤轰笌鐮磋В","date":"2017-07-03T16:00:00.000Z","updated":"2018-08-01T08:31:04.763Z","comments":true,"path":"2017/07/04/blog/python/wingide6鐨勬惌寤轰笌鐮磋В/","link":"","permalink":"https://www.qwerse.com/2017/07/04/blog/python/wingide6鐨勬惌寤轰笌鐮磋В/","excerpt":"","text":"下载wingide61,官网里面下必须是6，才能用下面的软件破解 http://wingware.com/downloads/wing-pro 2，微云下载： https://share.weiyun.com/2ab08fc88f2ed22cbce9a6b54fb9b172 破解wingide61,下载破解软件： https://share.weiyun.com/e1bae3eb120a4cee3f8d0766cb3ef329 2，算号软件： https://share.weiyun.com/9af74fd022e96d32e2920f7077d742e2 ###使用方法： http://www.lizenghai.com/archives/491.html wingide是我用过不重，但又功能齐全的软件，符合我！","categories":[{"name":"python","slug":"python","permalink":"https://www.qwerse.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.qwerse.com/tags/python/"}],"keywords":[{"name":"python","slug":"python","permalink":"https://www.qwerse.com/categories/python/"}]},{"title":"用atom打造python IDE","slug":"blog/python/鐢╝tom鎵撻€爌ython-IDE","date":"2017-05-20T16:00:00.000Z","updated":"2018-08-02T10:39:56.416Z","comments":true,"path":"2017/05/21/blog/python/鐢╝tom鎵撻€爌ython-IDE/","link":"","permalink":"https://www.qwerse.com/2017/05/21/blog/python/鐢╝tom鎵撻€爌ython-IDE/","excerpt":"","text":"这期间从9点一直干到下午2:48，好难受啊！最后还是选择了atom，期间我也试过vscode和sublime。配置全部都太难了，而且文档也不是很健全。慢慢折腾，我终于ok了。虽然atom是英文的！ 安装期间要安装这几个插件：script 可以让你在atom里直接运行脚本 python-autopep8 自动符合pep8代码规范 autocomplete-python 自动补全 python-tools 工具 安装时候要FQ出去，不然有些插件会出错安装完毕建立一个.py结尾的文件写上内容ctrl+shift+b 就ok了","categories":[{"name":"coding","slug":"python","permalink":"https://www.qwerse.com/categories/python/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.qwerse.com/tags/python/"}],"keywords":[{"name":"coding","slug":"python","permalink":"https://www.qwerse.com/categories/python/"}]},{"title":"勒索软件攻击防范","slug":"blog/安全/勒索软件攻击防范","date":"2017-05-12T16:00:00.000Z","updated":"2018-08-02T10:39:56.420Z","comments":true,"path":"2017/05/13/blog/安全/勒索软件攻击防范/","link":"","permalink":"https://www.qwerse.com/2017/05/13/blog/安全/勒索软件攻击防范/","excerpt":"","text":"2017年5月12日起，在国内外网络中发现爆发基于Windows网络共享协议进行攻击传播的蠕虫恶意代码，这是不法分子通过改造之前泄露的NSA黑客武器库中“永恒之蓝”攻击程序发起的网络攻击事件。目前发现的蠕虫会扫描开放445文件共享端口的Windows机器，无需用户任何操作，只要开机上网，不法分子就能在电脑和服务器中植入执行勒索程序、远程控制木马、虚拟货币挖矿机等恶意程序。此蠕虫目前在没有对445端口进行严格访问控制的教育网及企业内网大量传播，呈现爆发的态势，受感染系统会被勒索高额金钱，不能按时支付赎金的系统会被销毁数据造成严重损失。该蠕虫攻击事件已经造成非常严重的现实危害，各类规模的企业内网也已经面临此类威胁。360安全监测与响应中心也将持续关注该事件的进展，并第一时间为您更新该事件信息。前情提要：北京时间2017年4月14日晚，一大批新的NSA相关网络攻击工具及文档被Shadow Brokers组织公布，其中包含了涉及多个Windows系统服务（SMB、RDP、IIS）的远程命令执行工具。 预防感染办法:①控制面板-&gt;系统与安全-&gt;启用Windows防火墙-&gt;点击”高级设置”-&gt;点击“入站规则”-&gt;选择”新建规则”-&gt;规则类型选择“端口”-&gt;应用于“TCP”协议 特定本地端口并输入“445”-&gt;“操作”选择“阻止连接”-&gt;“配置文件”中“规则应用”全部勾选-&gt;规则名称任意输入并点击完成 ②打上最新官方补丁https://technet.microsoft.com/zh-cn/library/security/MS17-010 （各系统具体补丁：win7 : https://mirror.sdu.edu.cn/ms17-010/win7/ win8 : https://mirror.sdu.edu.cn/ms17-010/win8/ win10 : https://mirror.sdu.edu.cn/ms17-010/win10/） ③XP win2003 以下 https://dl.360safe.com/nsa/nsatool.exe （360的检测与修复工具） ④个人蔫脑最直接的办法就是用杀软快速扫描一下，基本上能够检测出开了哪些风险端口并处理关闭 提示：官方补丁完成后，可以下载文章内那个360的检测以下 是不是修复完成。 另外附加一个H大发布的已经被感染电脑的解决办法：1:打开那个勒索软件界面，点击copy. （复制黑客的比特币地址）2:把copy粘贴到btc.com （区块链查询器）3:在区块链查询器中找到黑客收款地址的交易记录，然后随意选择一个txid（交易哈希值）4:把txid 复制粘贴给 勒索软件界面按钮connect us.5:等黑客看到后 你再点击勒索软件上的check payment.6:再点击decrypt 解密文件即可。此方法不知道有没有用，想看看的人可以找个样本在虚拟机里面尝试一下（附上样本文件哈勃分析结果报告：https://habo.qq.com/file/showdetail?pk=ADEGY11uB2IIPVs5） 再附上一个最新解决已感染文件找回办法：到卡巴斯基下载文件解锁工具https://ransom.kaspersky.com/（据说是攻破了黑客的密钥库，利用已有密钥研究出了反向破解的黑科技），有一定概率能够恢复文件（此方法来自网络具体结果可以自己在已经感染的电脑上尝试恢复） 大部分内容来自吾爱论坛","categories":[{"name":"安全","slug":"security","permalink":"https://www.qwerse.com/categories/security/"}],"tags":[{"name":"安全","slug":"security","permalink":"https://www.qwerse.com/tags/security/"}],"keywords":[{"name":"安全","slug":"security","permalink":"https://www.qwerse.com/categories/security/"}]},{"title":"fedora安装和必备软件","slug":"blog/linux/fedora瀹夎浣跨敤","date":"2017-01-02T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2017/01/03/blog/linux/fedora瀹夎浣跨敤/","link":"","permalink":"https://www.qwerse.com/2017/01/03/blog/linux/fedora瀹夎浣跨敤/","excerpt":"","text":"学习linux一直用的是centos，用其他的linux版本很不熟悉，一开始用的是manjaro，pacman管理不是很熟悉之后用了deepin，没想到安装一半出错了，我都不知道是怎么回事，把错误反馈了社区，之后决定使用fedora，更centos差不多我就用着了，不换了。 当然，刚开始有很多东西需要配置，才能更好的使用。 1必须要配置好软件源，才能方便行事#### 这是个网页，创建一个repo，把网页里面的内容复制进去 https://github.com/FZUG/repo/blob/master/repos/FZUG.repo #### 这个是个可以安装上面源没有的软件 rpm -ivh http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-stable.noarch.rpm ### 2开始安装常用软件 看清楚name的行，sudo dnf install $name 就能安装你想要安装的软件了##### 在安装软件时可能会少依赖，慢慢补就行了。 Name123456789101112131415161718192021222324252627282930313233343536373839404142434445sogoupinyin 搜狗拼音输入法fcitx-rime 中州韵输入法fcitx-sunpinyin sunpinyin 输入法fcitx-qt5 fcitx qt5 输入模块Multimediakwplayer 酷我音乐doubanfm-qt 豆瓣FMmusicbox 网易云音乐 CLIdeepin-music-player 深度音乐moonplayer Moonplayer播放器simplescreenrecorder 屏幕录像obs-studio 屏幕录像/流媒体直播tragtor FFmpeg音视频转码Notes / Dictwiznote 为知笔记 stablewiznote-beta 为知笔记 betayoudao-dict 有道词典 for linuxBrowser / Proxyopera-developer Opera developeropera-beta Opera betaopera-stable Opera stablefreshplayerplugin Firefox PPAPI flash 兼容插件Downloadsbcloud 百度云客户端xware-desktop 迅雷客户端pointdownload 点载, 支持迅雷/BT/ed2k下载System toolsccal 命令行下的农历日历grub4dos grub 引导管理器screenfetch 系统信息收集vim 7.4.764 编辑器之神，增加剪贴板/lua/py3支持dkms-mt7601u MT7601U USB Wifi 驱动System librariesopencc 简繁转换库，修正依赖sunpinyin 基于 SLM 模型的输入法引擎，更新字典python-html2text fedora HTML -&gt; ASCIIpython3-xlib Python3 X 库python3-keybinder null Python3 键绑定库python-mutagen 处理音频元数据python3-cairo Python3 cairo 绑定，修复 bugpygobject3 Python GObject 封装，修复 bugdeepin-ui Deepin UI toolkitdeepin-utils Deepin utils 库deepin-gsettings gsettings python 绑定pyjavascriptcore fedora pyjs","categories":[{"name":"web","slug":"web","permalink":"https://www.qwerse.com/categories/web/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"web","slug":"web","permalink":"https://www.qwerse.com/categories/web/"}]},{"title":"docker的基本用法","slug":"blog/linux/docker鍩虹鎿嶄綔","date":"2016-12-07T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2016/12/08/blog/linux/docker鍩虹鎿嶄綔/","link":"","permalink":"https://www.qwerse.com/2016/12/08/blog/linux/docker鍩虹鎿嶄綔/","excerpt":"","text":"就如同mysql改查一样只需要了解就行，以后需要在深入，就行了。 构建镜像 docker search nginx \\\\以nginx的docker镜像为例 docker pull nginx \\\\获取镜像 docker images \\\\查看本机有哪些docker镜像 在亲自获取过程中由于国情，被 q 了，只有到国内去下载了 1，阿里云docker加速器 2，时速云docker市场 都能获取到镜像。 1，从一个镜像，启动一个容器docker run -it --name one-nginx nginx /bin/bash \\\\run 运行的意思，-it 开启一个伪终端，不关闭，--name 起一个自定义名字,/bin/bash 启动的程序 docker run -idt --name one-nginx nginx /bin/bash \\\\-d 把程序后端运行 2，查看容器运行情况docker ps \\\\查看进程 docker ps -a \\\\查看所有进程 docker ps -l \\\\查看最后一个进程 3，删除容器docker rm 容器id 4，删除镜像docker rmi 镜像id","categories":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/categories/linux/"}]},{"title":"centos6,内核升级为3.10","slug":"blog/linux/centos6鍐呮牳鍗囩骇涓_.10","date":"2016-11-02T16:00:00.000Z","updated":"2018-08-02T10:39:56.410Z","comments":true,"path":"2016/11/03/blog/linux/centos6鍐呮牳鍗囩骇涓_.10/","link":"","permalink":"https://www.qwerse.com/2016/11/03/blog/linux/centos6鍐呮牳鍗囩骇涓_.10/","excerpt":"","text":"导入公钥：rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org 要为redhat6和centos6安装ELRepo6仓库：rpm -Uvh http://www.elrepo.org/elrepo-release-6-6.el6.elrepo.noarch.rpm 安装 kernel-lt（lt=long-term）yum --enablerepo=elrepo-kernel install kernel-lt -y 编辑grub.conf文件，修改Grub引导顺序vim /etc/grub.conf # grub.conf generated by anaconda # # Note that you do not have to rerun grub after making changes to this file # NOTICE: You do not have a /boot partition. This means that # all kernel and initrd paths are relative to /, eg. # root (hd0,0) # kernel /boot/vmlinuz-version ro root=/dev/sda1 # initrd /boot/initrd-[generic-]version.img #boot=/dev/sda default=0 timeout=5 splashimage=(hd0,0)/boot/grub/splash.xpm.gz hiddenmenu title CentOS (3.10.28-1.el6.elrepo.x86_64) root (hd0,0) kernel /boot/vmlinuz-3.10.28-1.el6.elrepo.x86_64 ro root=UUID=0a05411f-16f2-4d69-beb0-2db4cefd3613 rd_NO_LUKS KEYBOARDTYPE=pc KEYTABLE=us rd_NO_MD crashkernel=auto LANG=en_US.UTF-8 rd_NO_LVM rd_NO_DM rhgb quiet initrd /boot/initramfs-3.10.28-1.el6.elrepo.x86_64.img title CentOS (2.6.32-431.3.1.el6.x86_64) root (hd0,0) kernel /boot/vmlinuz-2.6.32-431.3.1.el6.x86_64 ro root=UUID=0a05411f-16f2-4d69-beb0-2db4cefd3613 rd_NO_LUKS KEYBOARDTYPE=pc KEYTABLE=us rd_NO_MD crashkernel=auto LANG=en_US.UTF-8 r d_NO_LVM rd_NO_DM rhgb quiet initrd /boot/initramfs-2.6.32-431.3.1.el6.x86_64.img title CentOS (2.6.32-431.el6.x86_64) root (hd0,0) kernel /boot/vmlinuz-2.6.32-431.el6.x86_64 ro root=UUID=0a05411f-16f2-4d69-beb0-2db4cefd3613 rd_NO_LUKS KEYBOARDTYPE=pc KEYTABLE=us rd_NO_MD crashkernel=auto LANG=zh_CN.UTF-8 rd_NO _LVM rd_NO_DM rhgb quiet initrd /boot/initramfs-2.6.32-431.el6.x86_64.img 确认刚安装好的内核在哪个位置，然后设置default值（从0开始），一般新安装的内核在第一个位置，所以设置default=0。 5、重启，查看内核版本号[root@dev ~]# uname -r 3.10.28-1.el6.elrepo.x86_64","categories":[{"name":"web","slug":"web","permalink":"https://www.qwerse.com/categories/web/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"web","slug":"web","permalink":"https://www.qwerse.com/categories/web/"}]},{"title":"http 状态代码表","slug":"blog/web/http鐘舵€佽〃","date":"2016-10-02T16:00:00.000Z","updated":"2018-08-02T10:39:56.416Z","comments":true,"path":"2016/10/03/blog/web/http鐘舵€佽〃/","link":"","permalink":"https://www.qwerse.com/2016/10/03/blog/web/http鐘舵€佽〃/","excerpt":"","text":"2xx 成功200 正常；请求已完成。201 正常；紧接 POST 命令。202 正常；已接受用于处理，但处理尚未完成。203 正常；部分信息 — 返回的信息只是一部分。204 正常；无响应 — 已接收请求，但不存在要回送的信息。 3xx 重定向301 已移动 — 请求的数据具有新的位置且更改是永久的。302 已找到 — 请求的数据临时具有不同 URI。303 请参阅其它 — 可在另一 URI 下找到对请求的响应，且应使用 GET 方法检索此响应。304 未修改 — 未按预期修改文档。305 使用代理 — 必须通过位置字段中提供的代理来访问请求的资源。306 未使用 — 不再使用；保留此代码以便将来使用。 4xx 客户机中出现的错误400 错误请求 — 请求中有语法问题，或不能满足请求。401 未授权 — 未授权客户机访问数据。402 需要付款 — 表示计费系统已有效。403 禁止 — 即使有授权也不需要访问。404 找不到 — 服务器找不到给定的资源；文档不存在。407 代理认证请求 — 客户机首先必须使用代理认证自身。415 介质类型不受支持 — 服务器拒绝服务请求，因为不支持请求实体的格式。 5xx 服务器中出现的错误500 内部错误 — 因为意外情况，服务器不能完成请求。501 未执行 — 服务器不支持请求的工具。502 错误网关 — 服务器接收到来自上游服务器的无效响应。503 无法获得服务 — 由于临时过载或维护，服务器无法处理请求。 HTTP 400 - 请求无效 HTTP 401.1 - 未授权：登录失败 HTTP 401.2 - 未授权：服务器配置问题导致登录失败 HTTP 401.3 - ACL 禁止访问资源 HTTP 401.4 - 未授权：授权被筛选器拒绝 HTTP 401.5 - 未授权：ISAPI 或 CGI 授权失败 HTTP 403 - 禁止访问 HTTP 403 - 对 Internet 服务管理器 (HTML) 的访问仅限于 Localhost HTTP 403.1 禁止访问：禁止可执行访问 HTTP 403.2 - 禁止访问：禁止读访问 HTTP 403.3 - 禁止访问：禁止写访问 HTTP 403.4 - 禁止访问：要求 SSL HTTP 403.5 - 禁止访问：要求 SSL 128 HTTP 403.6 - 禁止访问：IP 地址被拒绝 HTTP 403.7 - 禁止访问：要求客户证书 HTTP 403.8 - 禁止访问：禁止站点访问 HTTP 403.9 - 禁止访问：连接的用户过多 HTTP 403.10 - 禁止访问：配置无效 HTTP 403.11 - 禁止访问：密码更改 HTTP 403.12 - 禁止访问：映射器拒绝访问 HTTP 403.13 - 禁止访问：客户证书已被吊销 HTTP 403.15 - 禁止访问：客户访问许可过多 HTTP 403.16 - 禁止访问：客户证书不可信或者无效 HTTP 403.17 - 禁止访问：客户证书已经到期或者尚未生效 HTTP 404.1 - 无法找到 Web 站点 HTTP 404 - 无法找到文件 HTTP 405 - 资源被禁止 HTTP 406 - 无法接受 HTTP 407 - 要求代理身份验证 HTTP 410 - 永远不可用 HTTP 412 - 先决条件失败 HTTP 414 - 请求 - URI 太长 HTTP 500 - 内部服务器错误 HTTP 500.100 - 内部服务器错误 - ASP 错误 HTTP 500-11 服务器关闭 HTTP 500-12 应用程序重新启动 HTTP 500-13 - 服务器太忙 HTTP 500-14 - 应用程序无效 HTTP 500-15 - 不允许请求 global.asa Error 501 - 未实现 HTTP 502 - 网关错误","categories":[{"name":"webnet","slug":"webnet","permalink":"https://www.qwerse.com/categories/webnet/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"webnet","slug":"webnet","permalink":"https://www.qwerse.com/categories/webnet/"}]},{"title":"MySql主从备份","slug":"blog/mysql/Mysql涓讳粠鍚屾","date":"2016-09-28T16:00:00.000Z","updated":"2018-08-01T08:24:32.065Z","comments":true,"path":"2016/09/29/blog/mysql/Mysql涓讳粠鍚屾/","link":"","permalink":"https://www.qwerse.com/2016/09/29/blog/mysql/Mysql涓讳粠鍚屾/","excerpt":"","text":"一.MySQL复制概述MySQL支持单向、异步复制，复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。MySQL复制基于主服务器在二进制日志中跟踪所有对数据库的更改(更新、删除等等)。因此，要进行复制，必须在主服务器上启用二进制日志。每个从服务器从主服务器接收主服务器已经记录到其二进制日志的保存的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，并在本机上执行相同的更新。然后封锁并等待主服务器通知新的更新。从服务器执行备份不会干扰主服务器，在备份过程中主服务器可以继续处理更新。 二.复制实现细节 MySQL使用3个线程来执行复制功能(其中1个在主服务器上，另两个在从服务器上）。当发出START SLAVE时，从服务器创建一个I/O线程，以连接主服务器并让它发送记录在其二进制日志中的语句。主服务器创建一个线程将二进制日志中的内容发送到从服务器。该线程可以即为主服务器上SHOW PROCESSLIST的输出中的Binlog Dump线程。从服务器I/O线程读取主服务器Binlog Dump线程发送的内容并将该数据拷贝到从服务器数据目录中的本地文件中，即中继日志。第3个线程是SQL线程，由从服务器创建，用于读取中继日志并执行日志中包含的更新。在从服务器上，读取和执行更新语句被分成两个独立的任务。当从服务器启动时，其I/O线程可以很快地从主服务器索取所有二进制日志内容，即使SQL线程执行更新的远远滞后。 ####1.复制线程状态通过show slave status/G和show master status可以查看复制线程状态。常见的线程状态有： #####（1）主服务器Binlog Dump线程· Has sent all binlog to slave; waiting for binlog to be updated线程已经从二进制日志读取所有主要的更新并已经发送到了从服务器。线程现在正空闲，等待由主服务器上新的更新导致的出现在二进制日志中的新事件。 #####（2）从服务器I/O线程状态· Waiting for master to send event线程已经连接上主服务器，正等待二进制日志事件到达。如果主服务器正空闲，会持续较长的时间。如果等待持续slave_read_timeout秒，则发生超时。此时，线程认为连接被中断并企图重新连接。 #####（3）从服务器SQL线程状态· Reading event from the relay log线程已经从中继日志读取一个事件，可以对事件进行处理了。· Has read all relay log; waiting for the slave I/O thread to update it线程已经处理了中继日志文件中的所有事件，现在正等待I/O线程将新事件写入中继日志。 2.复制过程中使用的传递和状态文件默认情况，中继日志使用host_name-relay-bin.nnnnnn形式的文件名，其中host_name是从服务器主机名，nnnnnn是序列号。中继日志与二进制日志的格式相同，并且可以用mysqlbinlog读取。从服务器在data目录中另外创建两个小文件。这些状态文件默认名为主master.info和relay-log.info。状态文件保存在硬盘上，从服务器关闭时不会丢失。下次从服务器启动时，读取这些文件以确定它已经从主服务器读取了多少二进制日志，以及处理自己的中继日志的程度。 如果要备份从服务器的数据，还应备份这两个小文件以及中继日志文件。它们用来在恢复从服务器的数据后继续进行复制。如果丢失了中继日志但仍然有relay-log.info文件，可以通过检查该文件来确定SQL线程已经执行的主服务器中二进制日志的程度。然后可以用Master_Log_File和Master_LOG_POS选项执行CHANGE MASTER TO来告诉从服务器重新从该点读取二进制日志。 三.mysql建立主从服务器配置方法####1.确保主从服务器的版本兼容。从服务器至少与主服务器版本相同或更高。 2.确保主服务器上my.cnf文件的[mysqld]部分包括一个log-bin选项。该部分还应有一个server-id=Master_id选项，其中master_id必须为1到232–1之间的一个正整数值。如：[mysqld] log-bin=mysql-bin server-id=1 ####3.启动主服务器注意：主服务器需要指定对哪些数据库记录二进制日志，这通过在启动主服务器时，加上–binlog-do-db= db_name选项来实现。如果要记录多个数据库，要分别为每个数据库指定该选项。目前主服务器上的启动脚本请使用/data/mysql/bin/startmysql。另外，主机开机后自动启动mysqld的脚本也已经修改。 4.在主服务器上为从服务器建立一个连接帐户，该帐户必须授予REPLICAITON SLAVE权限。mysql&gt; GRANT REPLICATION SLAVE ON *.* -&gt; TO &apos;帐号&apos;@&apos;从服务器IP&apos; IDENTIFIED BY &apos;密码&apos;; 5.备份数据库。shell&gt; mysqldump --master-data --opt database_name &gt; backup-file.sql 6.查看主服务器的状态mysql&gt; show master status/G; 记录File 和 Position 项的值注：由于没有锁定主服务器，这里记录的主服务器二进制日志position值可能会大于做mysqldump时的值，这将导致从服务器丢失在此期间的更新。如果可以保证在此期间主服务器不会出现创建新表的更新，那么丢失的影响不大；否则，将导致从服务器复制线程失败，这时必须在做mysqldump时锁定主服务器。 7.在从服务器的my.cnf文件中添加下面的行：[mysqld] server-id=slave_id slave_id值必须为2到232–1之间的一个正整数值。ID值唯一的标识了复制群集中的主从服务器，因此它们必须各不相同。 8.使用–skip-slave-start选项启动从服务器启动从服务器，并导入备份数据库文件。shell&gt; mysqladmin create target_db_name shell&gt; mysql target_db_name &lt; backup-file.sql ####9.在从服务器上执行下面的语句，以系统的实际值替换选项值： mysql&gt; CHANGE MASTER TO -&gt; MASTER_HOST=’master_host_name’, -&gt; MASTER_USER=’replication_user_name’, -&gt; MASTER_PASSWORD=’replication_password’, -&gt; MASTER_LOG_FILE=’recorded_log_file_name’, -&gt; MASTER_LOG_POS=recorded_log_position;其中recorded_log_file_name和recorded_log_position分别为步骤6所记录的File和Position值。 10.启动从服务器线程mysql&gt; START SLAVE； 11.执行上述程序后，从服务器应连接主服务器，并补充自从快照以来发生的任何更新。如果没有正确更新，请检查复制线程状态以及data目录下的.err文件获取信息。四.主从复制如何提高可靠性目前采用的主从单向复制，从服务器只是实时的保存了主服务器的一个副本。当主服务器发生故障时，可以切换到从服务器继续做查询，但不能更新。如果采用双向复制，即两台mysql服务器即作为主服务器，又作为从服务器。那么两者都可以执行更新操作并能实现负载均衡，当一方出现故障时，另一方不受影响。但是，除非能保证任何更新操作顺序都是安全的，否则双向复制会导致失败。为了更好的提高可靠性和可用性，需要当主服务器不可用时，能够在从服务器上更新，当主服务器恢复后，能够将从服务器上的更新同步到主服务器上。目前设想的方法是当主服务器不可用时，令从服务器成为Master。原来的主服务器重新启动后，设定为Slave，并从新的Master上同步更新。待同步一致后，再重新各自切换为原来的角色。具体的操作方法有待实验验证。 PS:主服务器产生的二进制日志会占据大量的磁盘空间，应定期删除过期的bin-log.目前通过crontab每天运行/data/mysql/data/log_auto_del.sh来删除3天前的二进制日志文件。博客来自：http://blog.csdn.net/libraworm/article/details/1703365","categories":[{"name":"mysql","slug":"storage","permalink":"https://www.qwerse.com/categories/storage/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.qwerse.com/tags/linux/"}],"keywords":[{"name":"mysql","slug":"storage","permalink":"https://www.qwerse.com/categories/storage/"}]}]}